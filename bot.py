import telebot
from telebot import types
from flask import Flask, request

TOKEN = '7517404462:AAEcuLj0cMavBhlWw_61DJAIMZK89KEtmRY'
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

user_data = {}

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üî¢ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ö–ë–ñ–£")
    return markup

def back_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –ù–ê–ó–ê–î")
    return markup

@bot.message_handler(commands=['start'])
@bot.message_handler(func=lambda message: message.text == "üî¢ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ö–ë–ñ–£")
def start(message):
    user_data[message.chat.id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–ú', '–ñ')
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º —Ç–≤–æ–∏ –ö–ë–ñ–£.\n\n–í—ã–±–µ—Ä–∏ –ø–æ–ª:", reply_markup=markup)
    bot.register_next_step_handler(message, get_gender)

def get_gender(message):
    if message.text not in ['–ú', '–ñ']:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_gender)
    user_data[message.chat.id]['gender'] = message.text
    bot.send_message(message.chat.id, "üéÇ –í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=back_button())
    bot.register_next_step_handler(message, get_age)

def get_age(message):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_age)
    user_data[message.chat.id]['age'] = int(message.text)
    bot.send_message(message.chat.id, "üìè –í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç (–≤ —Å–º):", reply_markup=back_button())
    bot.register_next_step_handler(message, get_height)

def get_height(message):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "‚ùå –†–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_height)
    user_data[message.chat.id]['height'] = int(message.text)
    bot.send_message(message.chat.id, "‚öñÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–µ—Å (–≤ –∫–≥):", reply_markup=back_button())
    bot.register_next_step_handler(message, get_weight)

def get_weight(message):
    try:
        weight = float(message.text.replace(",", "."))
    except ValueError:
        bot.send_message(message.chat.id, "‚ùå –í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_weight)
    user_data[message.chat.id]['weight'] = weight
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('1.2', '1.375', '1.55', '1.725', '1.9')

    activity_text = (
        "üèÉ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:\n\n"
        "üîπ 1.2 ‚Äî –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n< 5 000 —à–∞–≥–æ–≤, –Ω–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, —Å–∏–¥—è—á–∞—è —Ä–∞–±–æ—Ç–∞\n\n"
        "üîπ 1.375 ‚Äî –õ—ë–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n5 000‚Äì8 000 —à–∞–≥–æ–≤, 1‚Äì2 –ª—ë–≥–∫–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é\n\n"
        "üîπ 1.55 ‚Äî –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n8 000‚Äì12 000 —à–∞–≥–æ–≤, 3‚Äì4 —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n\n"
        "üîπ 1.725 ‚Äî –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n12 000‚Äì15 000 —à–∞–≥–æ–≤, 5‚Äì6 —Ç—è–∂—ë–ª—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n\n"
        "üîπ 1.9 ‚Äî –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n15 000+ —à–∞–≥–æ–≤, 2 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –¥–µ–Ω—å –∏–ª–∏ —Ç—è–∂—ë–ª–∞—è —Ä–∞–±–æ—Ç–∞"
    )

    bot.send_message(message.chat.id, activity_text, reply_markup=markup)
    bot.register_next_step_handler(message, get_activity)

def get_activity(message):
    try:
        activity = float(message.text)
        if activity not in [1.2, 1.375, 1.55, 1.725, 1.9]:
            raise ValueError
    except ValueError:
        bot.send_message(message.chat.id, "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_activity)
    user_data[message.chat.id]['activity'] = activity
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–ø–æ—Ö—É–¥–µ–Ω–∏–µ', '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ', '–Ω–∞–±–æ—Ä')
    bot.send_message(message.chat.id, "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å:", reply_markup=markup)
    bot.register_next_step_handler(message, get_goal)

def get_goal(message):
    goal = message.text
    if goal not in ['–ø–æ—Ö—É–¥–µ–Ω–∏–µ', '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ', '–Ω–∞–±–æ—Ä']:
        bot.send_message(message.chat.id, "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_goal)
    user_data[message.chat.id]['goal'] = goal

    if goal in ['–ø–æ—Ö—É–¥–µ–Ω–∏–µ', '–Ω–∞–±–æ—Ä']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('–º—è–≥–∫–∏–π (10%)', '—É–º–µ—Ä–µ–Ω–Ω—ã–π (15%)', '–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π (20%)')
        text = "üìâ –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å " + ("–¥–µ—Ñ–∏—Ü–∏—Ç–∞:" if goal == "–ø–æ—Ö—É–¥–µ–Ω–∏–µ" else "–ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞:")
        bot.send_message(message.chat.id, text, reply_markup=markup)
        bot.register_next_step_handler(message, get_deficit)
    else:
        calculate_kbju(message)

def get_deficit(message):
    percent_map = {
        '–º—è–≥–∫–∏–π (10%)': 0.10,
        '—É–º–µ—Ä–µ–Ω–Ω—ã–π (15%)': 0.15,
        '–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π (20%)': 0.20
    }
    if message.text not in percent_map:
        bot.send_message(message.chat.id, "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.", reply_markup=back_button())
        return bot.register_next_step_handler(message, get_deficit)
    user_data[message.chat.id]['percent'] = percent_map[message.text]
    calculate_kbju(message)

def calculate_kbju(message):
    data = user_data[message.chat.id]
    gender = data['gender']
    age = data['age']
    height = data['height']
    weight = data['weight']
    activity = data['activity']
    goal = data['goal']
    percent = data.get('percent', 0)

    bmr = 10 * weight + 6.25 * height - 5 * age + (5 if gender == '–ú' else -161)
    tdee = bmr * activity
    if goal == '–ø–æ—Ö—É–¥–µ–Ω–∏–µ':
        tdee *= (1 - percent)
    elif goal == '–Ω–∞–±–æ—Ä':
        tdee *= (1 + percent)

    protein_factors = {1.2: 1.5, 1.375: 1.8, 1.55: 2.0, 1.725: 2.1, 1.9: 2.2}
    protein = round(weight * protein_factors[activity])
    fat = round(weight * 1)
    protein_kcal = protein * 4
    fat_kcal = fat * 9
    calories = round(tdee)
    carbs = round((calories - protein_kcal - fat_kcal) / 4)

    result = (
        f"üìä *–¢–≤–æ–∏ –ö–ë–ñ–£:*\n\n"
        f"üî• –ö–∞–ª–æ—Ä–∏–∏: {calories} –∫–∫–∞–ª\n"
        f"ü•© –ë–µ–ª–∫–∏: {protein} –≥\n"
        f"ü•ë –ñ–∏—Ä—ã: {fat} –≥\n"
        f"üçö –£–≥–ª–µ–≤–æ–¥—ã: {carbs} –≥"
    )

    bot.send_message(message.chat.id, result, parse_mode='Markdown', reply_markup=main_menu())

@app.route(f"/{TOKEN}", methods=['POST'])
def receive_update():
    update = telebot.types.Update.de_json(request.get_json(force=True))
    bot.process_new_updates([update])
    return '', 200

@app.route('/')
def home():
    return '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! ‚úÖ'

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"https://telegram-kbju-bot.onrender.com/{TOKEN}")
    app.run(host="0.0.0.0", port=10000)
